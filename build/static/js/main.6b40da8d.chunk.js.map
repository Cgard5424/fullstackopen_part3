{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","_ref","name","deletePerson","react_default","a","createElement","number","value","id","onClick","Filter","props","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","baseURL","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","Notification","message","notificationType","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","showAll","setShowAll","_useState11","_useState12","newMessage","setNewMessage","_useState13","_useState14","newMessageType","setNewMessageType","useEffect","personService","initialPersons","updateNumber","person","find","updatedPerson","objectSpread","returnedPerson","map","catch","error","setTimeout","numbersToShow","filter","toLowerCase","includes","components_Notification","components_Filter","event","target","length","components_PersonForm","preventDefault","nameObject","some","window","confirm","components_Persons","key","newPersons","p","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6b40da8d.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Persons = ({ name, deletePerson }) => {\n    return(\n      <div>\n        {name.name} {name.number} <button value={name.id} onClick={deletePerson}>delete</button>\n      </div>\n    )\n  }\n\nexport default Persons","import React from \"react\"\n\nconst Filter = (props) => {\n    return(\n     <div>\n        filter shown with<input\n            value={props.newFilter}\n            onChange={props.handleFilterChange}\n        />\n    </div>\n    )\n  }\n\nexport default Filter","import React from \"react\"\n\nconst PersonForm = (props) => {\n    return(\n      <form onSubmit={props.addName}>\n        <div>\n          name: <input \n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","import axios from \"axios\";\n// const baseURL = 'http://localhost:3001/api/persons'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseURL, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove}","import React from \"react\"\n\nconst Notification = ({ message, notificationType }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={notificationType}>\n            {message}\n        </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [newMessage, setNewMessage] = useState(null)\n  const [newMessageType, setNewMessageType] = useState('success')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (!newName) {\n      setNewMessageType('error')\n      setNewMessage('Error: no name was provided')\n      setTimeout(() => {\n        setNewMessage(null)\n      }, 5000)\n    }\n\n    else if (!newNumber) {\n      setNewMessageType('error')\n      setNewMessage('Error: no number was provided')\n      setTimeout(() => {\n        setNewMessage(null)\n      }, 5000)\n    }\n\n    else if (!persons.some(person => person.name === newName)) {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n      setNewMessageType('success')\n      setNewMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setNewMessage(null)\n      }, 5000)\n    }\n\n    else {\n      if (window.confirm(`${newName} is already added to phonebook. Replace the older number with a new one?`)) {\n\n        updateNumber()\n        setNewName('')\n        setNewNumber('')\n        setNewMessageType('success')\n        setNewMessage(`Number for ${newName} has been updated`)\n        setTimeout(() => {\n          setNewMessage(null)\n      }, 5000)\n      }\n    }\n  }\n\n  const updateNumber = () => {\n    const person = persons.find(person => person.name === newName)\n    const updatedPerson = {\n      ...person,\n      number: newNumber\n    }\n\n    personService\n      .update(person.id, updatedPerson)\n      .then(returnedPerson => {\n        setPersons(\n          persons.map(person => \n            person.id !== returnedPerson.id ? person : returnedPerson\n          )\n        )\n      })\n      .catch(error => {\n        setNewMessageType('error')\n        setNewMessage(`Information of ${updatedPerson.name} has already been removed from the server`)\n        setTimeout(() => {\n          setNewMessage(null)\n      }, 5000)\n      })\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)){\n      personService\n      .remove(id)\n      .then(() => {\n        const newPersons = persons.filter(p => p.id !== id)\n        setPersons(newPersons)\n      })\n      .catch(error => {\n        setNewMessageType('error')\n        setNewMessage(`Information of ${name} has already been removed from the server`)\n        setTimeout(() => {\n          setNewMessage(null)\n      }, 5000)\n      })\n      setNewMessageType('success')\n      setNewMessage(`${name} successfully removed from the server`)\n      setTimeout(() => {\n        setNewMessage(null)\n    }, 5000)\n    }\n  }\n\n  const numbersToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()) === true)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    if (event.target.value.length === 0) {\n      //\n      setShowAll(true)\n      setNewFilter('')\n    }\n    else {\n      setShowAll(false)\n      setNewFilter(event.target.value)\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newMessage} notificationType={newMessageType}/>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm \n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}  \n      />\n\n      <h3>Numbers</h3>\n\n      {numbersToShow.map(name =>\n        <Persons key={name.id} name={name} deletePerson={() => deletePerson(name.id, name.name)}/>\n        )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}